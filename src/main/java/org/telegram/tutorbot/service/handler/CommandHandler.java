package org.telegram.tutorbot.service.handler;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.BotApiMethod;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.tutorbot.bot.Bot;
import org.telegram.tutorbot.service.data.DefaultMessage;
import org.telegram.tutorbot.service.factory.KeyboardFactory;
import org.telegram.tutorbot.service.manager.FeedbackManager;
import org.telegram.tutorbot.service.manager.HelpManager;
import java.util.List;
import static org.telegram.tutorbot.service.data.Command.*;
import static org.telegram.tutorbot.service.data.CallbackData.*;

@Service
public class CommandHandler {
    private final KeyboardFactory keyboardFactory;
    private final HelpManager helpManager;
    private final FeedbackManager feedbackManager;

    @Autowired
    public CommandHandler(KeyboardFactory keyboardFactory,
                          HelpManager helpManager,
                          FeedbackManager feedbackManager) {
        this.keyboardFactory = keyboardFactory;
        this.helpManager = helpManager;
        this.feedbackManager = feedbackManager;
    }

    public BotApiMethod<?> answer(Message message, Bot bot) {
        String command = message.getText();
        switch (command) {
            case START_COMMAND -> {
                return start(message);
            }
            case FEEDBACK_COMMAND -> {
                return feedbackManager.answerCommand(message);
            }
            case HELP_COMMAND -> {
                return helpManager.answerCommand(message);
            }
            default -> {
                return handleUnknownCommand(message);
            }
        }
    }

    private BotApiMethod<?> handleUnknownCommand(Message message) {
        String messageText = DefaultMessage.getDefaultMessage();
        return sendMessage(message, messageText);
    }

    private BotApiMethod<?> start(Message message) {
        String messageText = """
                –ü–æ–¥—Ä—É—á–Ω—ã–π –í–ª–∞–¥–∏–∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç. –Ø —Å–æ–∑–¥–∞–Ω –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Ä–µ–ø–∏—Ç–∏—Ç–æ—Ä–∞ –∏ —É—á–µ–Ω–∏–∫–∞.
                                        
                –ß—Ç–æ –≤–æ–æ–±—â–µ —É–º–µ—é?
                                        
                üìå –°–æ—Å—Ç–∞–≤–ª—è—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                üìå –ü—Ä–∏–∫—Ä–µ–ø–ª—è—é –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
                üìå –í–µ–¥—É –∫–æ–Ω—Ç—Ä–æ–ª—å —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏ (–¥–∞–∞–∞, –±–æ–π—Å—è –º–µ–Ω—è)
                """;

        return SendMessage.builder()
                .chatId(message.getChatId())
                .replyMarkup(keyboardFactory.getInlineKeyboard(
                        List.of("–ü–æ–º–æ—â—å", "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"),
                        List.of(2),
                        List.of(HELP, FEEDBACK)
                ))
                .text(messageText)
                .build();
    }

    private BotApiMethod<?> sendMessage(Message message, String messageText) {
        return SendMessage.builder()
                .chatId(message.getChatId())
                .text(messageText)
                .disableWebPagePreview(true)
                .build();
    }
}

